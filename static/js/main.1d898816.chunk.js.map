{"version":3,"sources":["components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.jsx","components/NewMovie/NewMovie.jsx","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","regEx","NewMovie","state","errors","handleChange","event","target","name","value","setState","filter","error","trim","handleBlur","checkForValidData","handleSubmit","preventDefault","props","addMovie","resetState","setErrorMessage","failedInput","includes","match","this","onSubmit","autoComplete","Object","keys","stateField","TextField","id","label","toUpperCase","slice","fullWidth","variant","helperText","onChange","onBlur","Button","type","length","disabled","values","every","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1d898816.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport {\n  Button,\n  TextField,\n} from '@material-ui/core';\n\nimport './NewMovie.scss';\n\n// eslint-disable-next-line\nconst regEx = /^(ftp|http|https|chrome|:\\/\\/|\\.|@){2,}(localhost|\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|\\S*:\\w*@)*([a-zA-Z]|(\\d{1,3}|\\.){7}){1,}(\\w|\\.{2,}|\\.[a-zA-Z]{2,3}|\\/|\\?|&|:\\d|@|=|\\/|\\(.*\\)|#|-|%)*$/gum;\n\nexport class NewMovie extends Component {\n  state = {\n    errors: [],\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState(state => ({\n      errors: state.errors.filter(error => error !== name),\n      [name]: !state[name] ? value.trim() : value,\n    }));\n  }\n\n  handleBlur = (event) => {\n    const { name, value } = event.target;\n    this.checkForValidData(name, value)\n  }\n\n  checkForValidData(name, value) {\n\n    if (!value\n      || (['imdbUrl', 'imgUrl'].includes(name) && !value.match(regEx))\n    ) {\n      this.setState(state => ({\n        errors: [...state.errors, name],\n      }));\n\n      return false;\n    }\n\n    return true;\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n\n    this.props.addMovie({\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId\n    });\n\n    this.resetState();\n  }\n\n  setErrorMessage = (failedInput) => {\n    return ['imdbUrl', 'imgUrl'].includes(failedInput) && this.state[failedInput]\n      ? `${failedInput} is not valid `\n      : `${failedInput} is required`;\n  }\n\n  resetState() {\n    this.setState({\n      errors: [],\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  render() {\n\n    const { errors } = this.state;\n\n    \n    return (\n      <form \n        className=\"form\" \n        onSubmit={this.handleSubmit} \n        autoComplete=\"off\"\n      >\n        {\n          Object.keys(this.state).map((stateField) => {\n            return stateField !== 'errors'\n              && (<div className=\"wrapper\" key={stateField}>\n                <TextField\n                  id={stateField}\n                  label={\n                    stateField[0].toUpperCase() + stateField.slice(1)\n                  }\n                  fullWidth\n                  name={stateField}\n                  value={this.state[`${stateField}`]}\n                  variant=\"outlined\"\n                  error={errors.includes(stateField)}\n\n                  helperText={\n                    errors.includes(stateField) && this.setErrorMessage(stateField)\n                  }\n                  onChange={this.handleChange}\n                  onBlur={this.handleBlur}\n                />\n              </div>\n              );\n          })\n        }\n        <div className=\"wrapper\">\n          <Button\n            type=\"submit\"\n            variant=\"outlined\"\n            error={errors.length}\n            disabled={!(Object.values(this.state).every(value => value) && !errors.length)}\n            fullWidth\n          >\n            Add Movie\n          </Button>\n        </div>\n\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\n\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\n\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            addMovie={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}